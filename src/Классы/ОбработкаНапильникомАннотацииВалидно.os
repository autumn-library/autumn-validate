#Использовать decorator

Перем _Валидатор;

Функция ОбработатьЖелудь(Желудь, ОпределениеЖелудя) Экспорт // BSLLS:UnusedParameters-off
	
	Методы = ОпределениеЖелудя.НайтиМетодыСАннотациями("Валидно");
	
	Если Методы.Количество() = 0 Тогда
		Возврат Желудь;
	КонецЕсли;
	
	ПостроительДекоратора = Новый ПостроительДекоратора(Желудь);
	
	Поле = Новый Поле("__ОсеннийВалидатор")
		.ЗначениеПоУмолчанию(_Валидатор);
	ПостроительДекоратора.Поле(Поле);
	
	Для Каждого Метод Из Методы Цикл
		
		Перехватчик = Новый Перехватчик(Метод.Имя)
			.ТипПерехватчика(ТипыПерехватчиковМетода.После)
			.Тело("
				|__РезультатВалидации = __ОсеннийВалидатор.Валидировать(Декоратор_ВозвращаемоеИзМетодаЗначение);
				|__ОписаниеОшибокВалидации = __ОсеннийВалидатор.ОписаниеОшибокВалидации(__РезультатВалидации);
				|Если ЗначениеЗаполнено(__ОписаниеОшибокВалидации) Тогда
				|	__ТекстИсключения = СтрШаблон(
				|		""Возвращаемое значение метода %1 в желуде %2 не прошло валидацию:"",
				|		""" + Метод.Имя + """,
				|		""" + ОпределениеЖелудя.Имя() + """
				|	);
				|	__ТекстИсключения = __ТекстИсключения + Символы.ПС + __ОписаниеОшибокВалидации;
				|	
				|	ВызватьИсключение __ТекстИсключения;
				|КонецЕсли;
				|"
			);
		
		ПостроительДекоратора.Перехватчик(Перехватчик);
		
	КонецЦикла;
	
	Возврат ПостроительДекоратора.Построить();
	
КонецФункции

&Напильник
Процедура ПриСозданииОбъекта(&Пластилин Валидатор)
	_Валидатор = Валидатор;
КонецПроцедуры
