#Использовать autumn

Перем _Валидатор;

Перем СоответствиеВалидацийИОграничений;
Перем Рефлектор;

Функция ЭтоАннотацияВалидации(ИмяАннотации) Экспорт
	Возврат СоответствиеВалидацийИОграничений.Получить(НРег(ИмяАннотации)) <> Неопределено;
КонецФункции

Функция СоздатьОбъектВалидации(Ограничение) Экспорт

	ИмяОграничения = Ограничение.ИмяОграничения();
	ИмяКлассаВалидации = СоответствиеВалидацийИОграничений.Получить(НРег(ИмяОграничения));

	Валидация = Новый(ИмяКлассаВалидации);
	Валидация.Инициализировать(Ограничение);
	
	Если Рефлектор.МетодСуществует(Валидация, "УстановитьВалидатор") Тогда
		Валидация.УстановитьВалидатор(_Валидатор);
	КонецЕсли;

	Возврат Валидация;

КонецФункции

&Желудь("ФабрикаВалидаций")
Процедура ПриСозданииОбъекта(
	&Пластилин Валидатор,
	&Пластилин(Тип = "ТаблицаЗначений") Валидации,
	&Пластилин КонтейнерАннотаций
)
	_Валидатор = Валидатор;

	Рефлектор = Новый Рефлектор;

	ОпределениеАннотацииВалидация = КонтейнерАннотаций.ПолучитьОпределениеАннотации("Валидация");
	
	СоответствиеВалидацийИОграничений = Новый Соответствие;

	Для Каждого ДанныеВалидации Из Валидации Цикл
		ОпределениеЖелудя = ДанныеВалидации.ОпределениеЖелудя;
		АннотацияВалидация = ОпределениеЖелудя.Завязь().ДанныеМетода().Аннотации.Найти("валидация", "Имя");

		ОбъектАннотации = ОпределениеАннотацииВалидация.СоздатьОбъектАннотации(АннотацияВалидация);

		ИмяОграничения = ОбъектАннотации.ИмяОграничения();

		СоответствиеВалидацийИОграничений.Вставить(НРег(ИмяОграничения), ДанныеВалидации.Имя);
	КонецЦикла;

КонецПроцедуры